{
    "variables": {
        "client_id": "{{env `ARM_CLIENT_ID`}}",
        "client_secret": "{{env `ARM_CLIENT_SECRET`}}",
        "client_cert_path": "{{env `ARM_CLIENT_CERT_PATH`}}",
        "subscription_id": "{{env `ARM_SUBSCRIPTION_ID`}}",
        "tenant_id": "{{env `ARM_TENANT_ID`}}",
        "object_id": "{{env `ARM_OBJECT_ID`}}",
        "managed_image_resource_group_name": "{{env `ARM_RESOURCE_GROUP`}}",
        "managed_image_name": "{{env `ARM_IMAGE_NAME`}}",
        "build_resource_group_name": "{{env `BUILD_RESOURCE_GROUP_NAME`}}",
        "temp_resource_group_name": "{{env `TEMP_RESOURCE_GROUP_NAME`}}",
        "location": "{{env `ARM_RESOURCE_LOCATION`}}",
        "virtual_network_name": "{{env `VNET_NAME`}}",
        "virtual_network_resource_group_name": "{{env `VNET_RESOURCE_GROUP`}}",
        "virtual_network_subnet_name": "{{env `VNET_SUBNET`}}",
        "private_virtual_network_with_public_ip": "{{env `PRIVATE_VIRTUAL_NETWORK_WITH_PUBLIC_IP`}}",
        "allowed_inbound_ip_addresses": "{{env `AGENT_IP`}}",
        "vm_size": "Standard_D8s_v4",
        "capture_name_prefix": "packer"
    },
    "sensitive-variables": [
        "client_secret"
    ],
    "builders": [
        {
            "name": "vhd",
            "type": "azure-arm",
            
            "client_id": "{{user `client_id`}}",
            "client_secret": "{{user `client_secret`}}",
            "subscription_id": "{{user `subscription_id`}}",
            "tenant_id": "{{user `tenant_id`}}",
            
            "os_disk_size_gb": "256",

            "client_cert_path": "{{user `client_cert_path`}}",
            "object_id": "{{user `object_id`}}",
            "location": "{{user `location`}}",
            "vm_size": "{{user `vm_size`}}",

            "managed_image_name": "windows-image-v4",
            "managed_image_resource_group_name": "{{user `managed_image_resource_group_name`}}",

            "build_resource_group_name": "{{user `build_resource_group_name`}}",
            "temp_resource_group_name": "{{user `temp_resource_group_name`}}",

            "virtual_network_name": "{{user `virtual_network_name`}}",
            "virtual_network_resource_group_name": "{{user `virtual_network_resource_group_name`}}",
            "virtual_network_subnet_name": "{{user `virtual_network_subnet_name`}}",
            "private_virtual_network_with_public_ip": "{{user `private_virtual_network_with_public_ip`}}",
            "allowed_inbound_ip_addresses": "{{user `allowed_inbound_ip_addresses`}}",

            "os_type": "Windows",
            "image_publisher": "microsoftwindowsserver",
            "image_offer": "windowsserver",
            "image_sku": "2022-datacenter-azure-edition-hotpatch",

            "communicator": "winrm",
            "winrm_use_ssl": "true",
            "winrm_insecure": "true",
            "winrm_timeout": "5m",
            "winrm_username": "packer",

            "azure_tags": {
                "os": "Windows",
                "now": "{{ isotime }}"
            }
        }
    ],
    "provisioners": [
    {
        "type": "powershell",
        "scripts": [
            "{{ template_dir }}/scripts/Install-Git.ps1",
            "{{ template_dir }}/scripts/Post-Git.ps1"
        ],
        "execution_policy": "unrestricted"
    },
    {
        "type": "windows-restart",
        "restart_timeout": "10m"
    },
    {
        "type": "powershell",
        "scripts": [
            "{{ template_dir }}/scripts/Install-WSL2.ps1"
        ],
        "elevated_user": "packer",
        "elevated_password": "{{.WinRMPassword}}"
    },
    {
        "type": "windows-restart",
        "restart_timeout": "10m"
    },
    {
        "type": "powershell",
        "scripts": [
            "{{ template_dir }}/scripts/Install-Docker-Desktop.ps1"
        ]
    },
    {
        "type": "windows-restart",
        "restart_timeout": "10m"
    },
    {
        "type": "powershell",
        "inline": [
          "Add-WindowsFeature Web-Server",
          "while ((Get-Service RdAgent).Status -ne 'Running') { Start-Sleep -s 5 }",
          "while ((Get-Service WindowsAzureGuestAgent).Status -ne 'Running') { Start-Sleep -s 5 }",
          "& $env:SystemRoot\\System32\\Sysprep\\Sysprep.exe /oobe /generalize /quiet /quit",
          "while($true) { $imageState = Get-ItemProperty HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Setup\\State | Select ImageState; if($imageState.ImageState -ne 'IMAGE_STATE_GENERALIZE_RESEAL_TO_OOBE') { Write-Output $imageState.ImageState; Start-Sleep -s 10  } else { break } }"
        ]
    }
]
}