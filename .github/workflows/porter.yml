name: porter/porter
on:
  pull_request:
    branches:
    - main
    paths-ignore:
      - 'docs/**'
env:
  GOVERSION: 1.20.7

jobs:
  Build:
    name: Native Compile
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v3.5.0
    - uses: actions/setup-go@v4
      with:
        go-version: "${{ env.GOVERSION }}" # The Go version to download (if necessary) and use.
    - run: go version
    - name: Configure Agent
      run: go run mage.go ConfigureAgent
    - name: Native Build
      run: mage build
      shell: bash
    - name: Publish Native Binaries
      uses: actions/upload-artifact@v3.1.1
      with:
        name: build-bin
        path: "${{ github.workspace }}/bin"

  XBuild:
    name: Cross Compile
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v3.5.0
    - uses: actions/setup-go@v4
      with:
        go-version: "${{ env.GOVERSION }}" # The Go version to download (if necessary) and use.
    - run: go version
    - name: Configure Agent
      run: go run mage.go ConfigureAgent
    - name: Cross Compile
      run: mage XBuildAll
      shell: bash
    - name: Publish Release Binaries
      uses: actions/upload-artifact@v3.1.1
      with:
        name: xbuild-bin
        path: "${{ github.workspace }}/bin"

  Unit_test:
    name: Unit Test
    runs-on: ubuntu-latest
    needs:
      - Build
    steps:
    - name: checkout
      uses: actions/checkout@v3.5.0
    - uses: actions/setup-go@v4
      with:
        go-version: "${{ env.GOVERSION }}" # The Go version to download (if necessary) and use.
    - run: go version
    - name: Configure Agent
      run: go run mage.go ConfigureAgent
    - name: Unit Test
      run: mage TestUnit
      shell: bash

  VetLint:
    name: Vet and Lint
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v3.5.0
    - uses: actions/setup-go@v4
      with:
        go-version: "${{ env.GOVERSION }}" # The Go version to download (if necessary) and use.
    - run: go version
    - name: Configure Agent
      run: go run mage.go ConfigureAgent
    - name: Vet
      run: mage Vet
      shell: bash
    - name: Lint
      run: mage Lint
      shell: bash

  Build-docker-images:
    name: Build Docker Images
    needs:
    - XBuild
    runs-on: ubuntu-latest
    if: success()
    steps:
    - name: checkout
      uses: actions/checkout@v3.5.0
    - uses: actions/setup-go@v4
      with:
        go-version: "${{ env.GOVERSION }}" # The Go version to download (if necessary) and use.
    - run: go version
    - name: Download Cross-Compiled Porter Binaries
      uses: actions/download-artifact@v3.0.1
      with:
        name: xbuild-bin
        path: bin
    - name: Setup Bin
      run: go run mage.go ConfigureAgent UseXBuildBinaries
    - name: Build Docker Images
      run: mage BuildImages

  Smoke-test:
    name: Smoke Test
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v3.5.0
    - name: Download Cross-Compiled Porter Binaries
      uses: actions/download-artifact@v3.0.1
      with:
        name: xbuild-bin
        path: bin
    - uses: actions/setup-go@v4
      with:
        go-version: "${{ env.GOVERSION }}" # The Go version to download (if necessary) and use.
    - run: go version
    - name: Configure Agent
      run: go run mage.go ConfigureAgent UseXBuildBinaries
    - name: Run Smoke Tests
      run: mage -v TestSmoke
