name: porter/porter
on:
  pull_request:
    branches:
    - main
env:
  GOCACHE: "${{ runner.workspace }}/.cache/go-build/"
  GOCACHE_KEY: v3 | go-build | "${{ runner.os }}" | go.sum
  GOCACHE_RESTOREKEYS: |
    v3 | go-build | "${{ runner.os }}"
    v3 | go-build | "${{ runner.os }}" | go.sum
  GOMODCACHE: "/home/vsts/go/pkg/mod"
  GOMODCACHE_KEY: v4 | go-pkg | "${{ runner.os }}" | go.sum
  GOMODCACHE_RESTOREKEYS: |
    v4 | go-pkg | "${{ runner.os }}"
    v4 | go-pkg | "${{ runner.os }}" | go.sum
  GOVERSION: 1.20.7
  GOXCACHE_KEY: v3 | go-xbuild | "${{ runner.os }}" | go.sum
  GOXCACHE_RESTOREKEYS: |
    v3 | go-xbuild | "${{ runner.os }}"
    v3 | go-xbuild | "${{ runner.os }}" | go.sum
jobs:
  Setup-pr_type:
    name: Determine PR Type
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v3.5.0
    - name: Is Doc Only?
      id: BUILD
      run: "./build/doc-only-build.sh"
      shell: bash
  Validate-build:
    name: Native Compile
    needs:
    - Setup-pr_type
    runs-on: ubuntu-latest
    if: success() && needs.Setup-pr_type.outputs['pr_type.BUILD.DOCS_ONLY'] == 'false'
    steps:
    - name: checkout
      uses: actions/checkout@v3.5.0
#     # This item has no matching transformer
#     - task: GoTool@0
#       displayName: Set Go Version
#       inputs:
#         version: "${{ env.GOVERSION }}"
#     # This item has no matching transformer
#     - task: Cache@2
#       displayName: Cache Go Packages
#       inputs:
#         key: "${{ env.GOMODCACHE_KEY }}"
#         restoreKeys: "${{ env.GOMODCACHE_RESTOREKEYS }}"
#         path: "${{ env.GOMODCACHE }}"
#     # This item has no matching transformer
#     - task: Cache@2
#       displayName: Cache Go Build
#       inputs:
#         key: "${{ env.GOCACHE_KEY }}"
#         restoreKeys: "${{ env.GOCACHE_RESTOREKEYS }}"
#         path: "${{ env.GOCACHE }}"
    - name: Configure Agent
      run: go run mage.go ConfigureAgent
    - name: Native Build
      run: mage build
      shell: bash
    - name: Publish Native Binaries
      uses: actions/upload-artifact@v3.1.1
      with:
        name: build-bin
        path: "${{ github.workspace }}/bin"
  Validate-xbuild:
    name: Cross Compile
    needs:
    - Setup-pr_type
    runs-on: ubuntu-latest
    if: success() && needs.Setup-pr_type.outputs['pr_type.BUILD.DOCS_ONLY'] == 'false'
    steps:
    - name: checkout
      uses: actions/checkout@v3.5.0
#     # This item has no matching transformer
#     - task: GoTool@0
#       displayName: Set Go Version
#       inputs:
#         version: "${{ env.GOVERSION }}"
#     # This item has no matching transformer
#     - task: Cache@2
#       displayName: Cache Go Packages
#       inputs:
#         key: "${{ env.GOMODCACHE_KEY }}"
#         restoreKeys: "${{ env.GOMODCACHE_RESTOREKEYS }}"
#         path: "${{ env.GOMODCACHE }}"
#     # This item has no matching transformer
#     - task: Cache@2
#       displayName: Cache Go Build
#       inputs:
#         key: "${{ env.GOXCACHE_KEY }}"
#         restoreKeys: "${{ env.GOXCACHE_RESTOREKEYS }}"
#         path: "${{ env.GOCACHE }}"
    - name: Configure Agent
      run: go run mage.go ConfigureAgent
    - name: Cross Compile
      run: mage XBuildAll
      shell: bash
    - name: Publish Release Binaries
      uses: actions/upload-artifact@v3.1.1
      with:
        name: xbuild-bin
        path: "${{ github.workspace }}/bin"
  Validate-unit_test:
    name: Unit Test
    needs:
    - Setup-pr_type
    runs-on: ubuntu-latest
    if: success() && needs.Setup-pr_type.outputs['pr_type.BUILD.DOCS_ONLY'] == 'false'
    steps:
    - name: checkout
      uses: actions/checkout@v3.5.0
#     # This item has no matching transformer
#     - task: GoTool@0
#       displayName: Set Go Version
#       inputs:
#         version: "${{ env.GOVERSION }}"
#     # This item has no matching transformer
#     - task: Cache@2
#       displayName: Cache Go Packages
#       inputs:
#         key: "${{ env.GOMODCACHE_KEY }}"
#         restoreKeys: "${{ env.GOMODCACHE_RESTOREKEYS }}"
#         path: "${{ env.GOMODCACHE }}"
#     # This item has no matching transformer
#     - task: Cache@2
#       displayName: Cache Go Build
#       inputs:
#         key: "${{ env.GOCACHE_KEY }}"
#         restoreKeys: "${{ env.GOCACHE_RESTOREKEYS }}"
#         path: "${{ env.GOCACHE }}"
    - name: Configure Agent
      run: go run mage.go ConfigureAgent
    - name: Unit Test
      run: mage TestUnit
      shell: bash
  Validate-VetLint:
    name: Vet and Lint
    needs:
    - Setup-pr_type
    runs-on: ubuntu-latest
    if: success() && needs.Setup-pr_type.outputs['pr_type.BUILD.DOCS_ONLY'] == 'false'
    steps:
    - name: checkout
      uses: actions/checkout@v3.5.0
#     # This item has no matching transformer
#     - task: GoTool@0
#       displayName: Set Go Version
#       inputs:
#         version: "${{ env.GOVERSION }}"
#     # This item has no matching transformer
#     - task: Cache@2
#       displayName: Cache Go Packages
#       inputs:
#         key: "${{ env.GOMODCACHE_KEY }}"
#         restoreKeys: "${{ env.GOMODCACHE_RESTOREKEYS }}"
#         path: "${{ env.GOMODCACHE }}"
#     # This item has no matching transformer
#     - task: Cache@2
#       displayName: Cache Go Build
#       inputs:
#         key: "${{ env.GOCACHE_KEY }}"
#         restoreKeys: "${{ env.GOCACHE_RESTOREKEYS }}"
#         path: "${{ env.GOCACHE }}"
    - name: Configure Agent
      run: go run mage.go ConfigureAgent
    - name: Vet
      run: mage Vet
      shell: bash
    - name: Lint
      run: mage Lint
      shell: bash
  Validate-build_docker:
    needs:
    - Validate-xbuild
    - Setup-pr_type
    runs-on: ubuntu-latest
    if: success() && needs.Setup-pr_type.outputs['pr_type.BUILD.DOCS_ONLY'] == 'false'
    steps:
    - name: checkout
      uses: actions/checkout@v3.5.0
#     # This item has no matching transformer
#     - task: GoTool@0
#       displayName: Set Go Version
#       inputs:
#         version: "${{ env.GOVERSION }}"
    - name: Download Cross-Compiled Porter Binaries
      uses: actions/download-artifact@v3.0.1
      with:
        name: xbuild-bin
        path: bin
    - name: Setup Bin
      run: go run mage.go ConfigureAgent UseXBuildBinaries
    - name: Build Docker Images
      run: mage BuildImages
  Validate-smoke_test:
    name: Run smoke tests on
    needs:
    - Validate-xbuild
    - Setup-pr_type
    runs-on:
      - self-hosted
      - "${{ matrix.vmImage }}"
    if: success() && needs.Setup-pr_type.outputs['pr_type.BUILD.DOCS_ONLY'] == 'false'
    strategy:
      matrix:
        include:
        - poolName: Azure Pipelines
          vmImage: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v3.5.0
    - name: Download Cross-Compiled Porter Binaries
      uses: actions/download-artifact@v3.0.1
      with:
        name: xbuild-bin
        path: bin
#     # This item has no matching transformer
#     - task: GoTool@0
#       displayName: Set Go Version
#       inputs:
#         version: "${{ env.GOVERSION }}"
    - name: Windows Cache Prep
      if: env.poolName == 'windows'
      run: attrib -r ${{ env.GOMODCACHE }}/*.* /s
#     # This item has no matching transformer
#     - task: Cache@2
#       displayName: Cache Go Packages
#       inputs:
#         key: "${{ env.GOMODCACHE_KEY }}"
#         restoreKeys: "${{ env.GOMODCACHE_RESTOREKEYS }}"
#         path: "${{ env.GOMODCACHE }}"
#     # This item has no matching transformer
#     - task: Cache@2
#       displayName: Cache Go Build
#       inputs:
#         key: "${{ env.GOCACHE_KEY }}"
#         restoreKeys: "${{ env.GOCACHE_RESTOREKEYS }}"
#         path: "${{ env.GOCACHE }}"
    - name: Configure Agent
      run: go run mage.go ConfigureAgent UseXBuildBinaries
    - name: Run Smoke Tests
      run: mage -v TestSmoke
