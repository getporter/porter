schemaVersion: 1.0.0-alpha.1
name: aks-spring-music
version: 0.1.0
description: "Spring Music Demo app with Azure Cosmos DB"
dockerfile: Dockerfile.tmpl
registry: getporter

mixins:
  - exec
  - helm3
  - arm
  - kubernetes

install:
  - arm:
      description: "Create AKS"
      type: arm
      template: "arm/aks.json"
      name: "{{ bundle.parameters.aks-cluster-name }}"
      resourceGroup: "{{ bundle.parameters.aks-resource-group }}"
      parameters:
        clusterName: "{{ bundle.parameters.aks-cluster-name }}"
        servicePrincipalClientId: "{{ bundle.credentials.CLIENT_ID}}"
        servicePrincipalClientSecret: "{{ bundle.credentials.CLIENT_SECRET}}"
        location: "{{ bundle.parameters.azure-location }}"

  - exec: 
      description: "Azure CLI login"
      command: "az"
      arguments: 
        - "login" 
        - "--service-principal"
        - "--username" 
        - "{{ bundle.credentials.CLIENT_ID}}"
        - "--password" 
        - "{{ bundle.credentials.CLIENT_SECRET}}"
        - "--tenant" 
        - "{{ bundle.credentials.TENANT_ID}}"

  - exec:
      description: "Azure CLI set subscription"
      command: "az"
      arguments: 
        - "account" 
        - "set"
        - "-s"
        - "{{ bundle.credentials.SUBSCRIPTION_ID}}"

  - exec: 
      description: "Azure CLI AKS get-credentials"
      command: "az"
      arguments: 
        - "aks" 
        - "get-credentials" 
        - "--resource-group" 
        - "{{ bundle.parameters.aks-resource-group }}"
        - "--name"
        - "{{ bundle.parameters.aks-cluster-name }}"

  - kubernetes:
      description: "Add RBAC roles for Tiller"
      manifests:
        - /cnab/app/manifests
      wait: true  

  - exec: 
      description: "Initialize helm on cluster"
      command: "helm"
      arguments: 
        - "init" 
        - "--service-account"
        - "tiller" 
        - "--upgrade"

  - arm:
      description: "Create Azure Cosmos DB"
      type: arm
      template: "arm/cosmosdb.json"
      name: aks-spring-music-cosmos
      resourceGroup: "{{ bundle.parameters.app-resource-group }}"
      parameters:
        name: "{{ bundle.parameters.cosmosdb-service-name }}"
        kind: "MongoDB"
        location: "{{ bundle.parameters.azure-location }}"
      outputs:
        - name: "COSMOSDB_HOST"
          key: "HOST"
        - name: "COSMOSDB_KEY"
          key: "primary_key"       
        - name: "COSMOSDB_CONNECTION_STRING"
          key: "connection_string"
          
  - helm3:
      description: "Helm Install Spring Music Demo App"
      name: aks-spring-music-helm
      chart: /cnab/app/charts/spring-music
      replace: true
      set:
        deploy.cosmosConnectString: "{{ bundle.outputs.COSMOSDB_CONNECTION_STRING }}"

uninstall:
  - exec:
      description: "Uninstall Spring Music Demo"
      command: ./helpers.sh
      arguments:
        - uninstall

credentials:
- name: SUBSCRIPTION_ID
  env: AZURE_SUBSCRIPTION_ID
- name: CLIENT_ID
  env: AZURE_CLIENT_ID
- name: TENANT_ID
  env: AZURE_TENANT_ID
- name: CLIENT_SECRET
  env: AZURE_CLIENT_SECRET

parameters:
- name: app-resource-group
  type: string
  default: aks-spring-music-demo
  env: APP_RESOURCE_GROUP
- name: aks-resource-group
  type: string
  default: aks-spring-music-demo
  env: AKS_RESOURCE_GROUP
- name: aks-cluster-name
  type: string
  default: my-aks-spring
  env: AKS_CLUSTER_NAME
- name: cosmosdb-service-name
  type: string
  default: myspringmusic
  env: COSMOSDB_SERVICE_NAME
- name: azure-location
  type: string
  default: eastus
  env: AZURE_LOCATION
