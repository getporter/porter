variables: # these are really constants
  vmImage: "ubuntu-latest"

parameters:
  - name: goVersion
    type: string
    default: "1.17.6"
  - name: registry
    type: string
    default: getporterci
    values:
      - docker.io/getporter
      - docker.io/getporterci
      - ghcr.io/getporter
  - name: shouldPublish
    type: boolean
    default: false
  - name: dualPublish # Publish to the registry parameter and to ghcr.io while we migrate to GHCR
    type: boolean
    default: true
  - name: skipTests
    type: boolean
    default: false
  - name: publishExamples
    type: boolean
    default: true

stages:
  - stage: Validate
    jobs:
      - job: build
        displayName: "Native Compile"
        pool:
          vmImage: ${{variables.vmImage}}
        steps:
          - task: GoTool@0
            displayName: "Set Go Version"
            inputs:
              version: ${{parameters.goVersion}}
          - script: go run mage.go ConfigureAgent
            displayName: "Configure Agent"
          - bash: mage build
            displayName: "Native Build"
          - task: PublishPipelineArtifact@0
            displayName: "Publish Native Binaries"
            inputs:
              targetPath: $(System.DefaultWorkingDirectory)/bin
              archiveFilePatterns: "**"
              artifactName: "build-bin"
      - job: xbuild
        displayName: "Cross Compile"
        pool:
          vmImage: ${{variables.vmImage}}
        steps:
          - task: GoTool@0
            displayName: "Set Go Version"
            inputs:
              version: ${{parameters.goVersion}}
          - script: go run mage.go ConfigureAgent
            displayName: "Configure Agent"
          - bash: mage XBuildAll
            displayName: "Cross Compile"
          - task: PublishPipelineArtifact@0
            displayName: "Publish Release Binaries"
            inputs:
              targetPath: $(System.DefaultWorkingDirectory)/bin
              archiveFilePatterns: "**"
              artifactName: "xbuild-bin"
      - job: unit_test
        displayName: "Unit Test"
        condition: not(${{ parameters.skipTests }})
        pool:
          vmImage: ${{variables.vmImage}}
        steps:
          - task: GoTool@0
            displayName: "Set Go Version"
            inputs:
              version: ${{parameters.goVersion}}
          - script: go run mage.go ConfigureAgent
            displayName: "Configure Agent"
          - bash: mage TestUnit
            displayName: "Unit Test"
      - job: integration_test
        displayName: "Integration Test"
        dependsOn: build
        condition: and(succeeded('build'), not(${{ parameters.skipTests }}))
        pool:
          vmImage: ${{variables.vmImage}}
        steps:
          - task: DownloadPipelineArtifact@2
            displayName: "Download Bin"
            inputs:
              source: current
              artifact: build-bin
              path: bin
          - task: GoTool@0
            displayName: "Set Go Version"
            inputs:
              version: ${{parameters.goVersion}}
          - script: go run mage.go ConfigureAgent SetBinExecutable
            displayName: "Configure Agent"
          - script: go run mage.go TestIntegration
            displayName: "Integration Test"
      - job: smoke_test
        displayName: "Run smoke tests on"
        dependsOn: xbuild
        condition: and(succeeded(), not(${{ parameters.skipTests }}))
        strategy:
          matrix:
            windows:
              poolName: "windows"
              vmImage: ""
            linux:
              poolName: "Azure Pipelines"
              vmImage: "ubuntu-latest"
        pool:
          name: $(poolName)
          vmImage: $(vmImage)
        steps:
          - task: DownloadPipelineArtifact@2
            displayName: "Download Cross-Compiled Porter Binaries"
            inputs:
              source: current
              artifact: xbuild-bin
              path: bin
          - task: GoTool@0
            displayName: "Set Go Version"
            inputs:
              version: ${{parameters.goVersion}}
          - script: go run mage.go ConfigureAgent UseXBuildBinaries
            displayName: "Setup Bin"
          - script: mage TestSmoke
            displayName: "Run Smoke Tests"

  - stage: Publish
    dependsOn: Validate
    condition: and(succeeded(), ${{ parameters.shouldPublish }})
    jobs:
      - job: publish_binaries
        displayName: "Publish Binaries"
        pool:
          vmImage: ${{variables.vmImage}}
        steps:
          - task: GoTool@0
            displayName: "Set Go Version"
            inputs:
              version: ${{parameters.goVersion}}
          - task: DownloadPipelineArtifact@2
            displayName: "Download Cross-Compiled Porter Binaries"
            inputs:
              source: current
              artifact: xbuild-bin
              path: bin
          - script: go run mage.go ConfigureAgent UseXBuildBinaries
            displayName: "Setup Bin"
          - script: |
              mage PublishPorter PublishMixins
            env:
              GITHUB_TOKEN: $(GITHUB_TOKEN)
            displayName: "Publish Porter Binaries"

      - job: publish_docker
        displayName: "Publish Docker Images"
        pool:
          vmImage: ${{variables.vmImage}}
        steps:
          - task: GoTool@0
            displayName: "Set Go Version"
            inputs:
              version: ${{parameters.goVersion}}
          - task: DownloadPipelineArtifact@2
            displayName: "Download Cross-Compiled Porter Binaries"
            inputs:
              source: current
              artifact: xbuild-bin
              path: bin
          - script: go run mage.go ConfigureAgent UseXBuildBinaries
            displayName: "Setup Bin"
          - task: Docker@1
            displayName: Docker Hub Login
            inputs:
              containerRegistryType: Container Registry
              dockerRegistryEndpoint: ${{parameters.registry}} # Log in with the saved credentials for the destination registry
              command: login
          - script: REGISTRY=${{parameters.registry}} mage PublishImages
            displayName: "Publish Docker Images to ${{parameters.registry}}"
          - task: Docker@1 # Support publishing to our old registry on Docker Hub and to our new location on GHCR while we migrate
            displayName: GHCR Login
            condition: ${{parameters.dualPublish}}
            inputs:
              containerRegistryType: Container Registry
              dockerRegistryEndpoint: ghcr.io/getporter
              command: login
          - script: REGISTRY=ghcr.io/getporter mage PublishImages
            displayName: "Publish Docker Images to ghcr.io/getporter"
            condition: ${{parameters.dualPublish}}

      - job: publish_example_bundles
        displayName: "Publish Example Bundles"
        condition: and(succeeded(), ${{ parameters.publishExamples }})
        pool:
          vmImage: ${{variables.vmImage}}
        steps:
          - task: GoTool@0
            displayName: "Set Go Version"
            inputs:
              version: ${{parameters.goVersion}}
          - task: DownloadPipelineArtifact@2
            displayName: "Download Native Porter Binaries"
            inputs:
              source: current
              artifact: build-bin
              path: bin
          - script: go run mage.go ConfigureAgent SetBinExecutable
            displayName: "Setup Bin"
          - bash: |
              set -e
              sudo make ajv
              make build-examples validate-examples
            displayName: "Build Example Bundles"
          - task: Docker@1
            displayName: Docker Login
            inputs:
              containerRegistryType: Container Registry
              dockerRegistryEndpoint: getporter-registry
              command: login
          - script: REGISTRY=${{parameters.registry}} make publish-examples
            displayName: "Publish Example Bundles"
