# Go
# Build your Go project.
# Add steps that test, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go

trigger: none
pr:
  autoCancel: true

pool:
  vmImage: "ubuntu-latest"

variables:
  GOVERSION: "1.18"

stages:
  - stage: Setup
    jobs:
      - job: pr_type
        displayName: "Determine PR Type"
        steps:
          - bash: ./build/doc-only-build.sh
            name: BUILD
            displayName: "Is Doc Only?"

  - stage: Validate
    dependsOn: Setup
    condition: eq(dependencies.Setup.outputs['pr_type.BUILD.DOCS_ONLY'], 'false')
    jobs:
      - job: build
        displayName: "Native Compile"
        steps:
          - task: GoTool@0
            displayName: "Set Go Version"
            inputs:
              version: "$(GOVERSION)"
          - script: go run mage.go ConfigureAgent
            displayName: "Configure Agent"
          - bash: mage build
            displayName: "Native Build"
          - task: PublishPipelineArtifact@0
            displayName: "Publish Native Binaries"
            inputs:
              targetPath: $(System.DefaultWorkingDirectory)/bin
              archiveFilePatterns: "**"
              artifactName: "build-bin"
      - job: xbuild
        displayName: "Cross Compile"
        steps:
          - task: GoTool@0
            displayName: "Set Go Version"
            inputs:
              version: "$(GOVERSION)"
          - script: go run mage.go ConfigureAgent
            displayName: "Configure Agent"
          - bash: mage XBuildAll
            displayName: "Cross Compile"
          - task: PublishPipelineArtifact@0
            displayName: "Publish Release Binaries"
            inputs:
              targetPath: $(System.DefaultWorkingDirectory)/bin
              archiveFilePatterns: "**"
              artifactName: "xbuild-bin"
      - job: unit_test
        displayName: "Unit Test"
        steps:
          - task: GoTool@0
            displayName: "Set Go Version"
            inputs:
              version: "$(GOVERSION)"
          - script: go run mage.go ConfigureAgent
            displayName: "Configure Agent"
          - bash: mage TestUnit
            displayName: "Unit Test"
      - job: build_docker
        dependsOn: xbuild
        steps:
          - task: GoTool@0
            displayName: "Set Go Version"
            inputs:
              version: "$(GOVERSION)"
          - task: DownloadPipelineArtifact@2
            displayName: "Download Cross-Compiled Porter Binaries"
            inputs:
              source: current
              artifact: xbuild-bin
              path: bin
          - script: go run mage.go ConfigureAgent UseXBuildBinaries
            displayName: "Setup Bin"
          - script: mage BuildImages
            displayName: "Build Docker Images"
      - job: smoke_test
        displayName: "Run smoke tests on"
        dependsOn: xbuild
        strategy:
          matrix:
            windows:
              poolName: "windows"
              vmImage: ""
            linux:
              poolName: "Azure Pipelines"
              vmImage: "ubuntu-latest"
        pool:
          name: $(poolName)
          vmImage: $(vmImage)
        steps:
          - task: DownloadPipelineArtifact@2
            displayName: "Download Cross-Compiled Porter Binaries"
            inputs:
              source: current
              artifact: xbuild-bin
              path: bin
          - task: GoTool@0
            displayName: "Set Go Version"
            inputs:
              version: "$(GOVERSION)"
          - script: go run mage.go ConfigureAgent UseXBuildBinaries
            displayName: "Configure Agent"
          - script: mage TestSmoke
            displayName: "Run Smoke Tests"
